
---
  - name: os_server used to create instance of {{ server_name }} using os_server module
    # this command references server specific variables in frontend_vars.yaml
    # it also references general instance variables in the defaults/general_instance_vars.yaml
    os_server:
      cloud:            "{{ cloud_name }}"
      name:             "{{ server_name }}"
      region_name:      "{{ region_name }}"
      image:            "{{ image_name }}"
      meta:             "group={{ group_name }},deployment_name={{ deployment_name }}"
      flavor:           "{{ flavor_name }}"
      security_groups:  "{{ sec_group }}"
      key_name:         "{{ ssh_key_name }}"
      wait:             "{{ wait_value }}"
      network:          "{{ net_name }}"
      userdata: |
        "{{ openstack_keys_and_repo }}"
    async: 1000
    poll: 0
    register: cthulhu

  - name: Cthulhu sleeps during asynchronous processes until it is time to devour "{{ server_name }}"
    async_status:
      jid: "{{ cthulhu.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 30
    loop: "{{ cthulhu.results }}"

  - name: 'Adding floating IP to "{{ server_name }}" via os_floating_ip module'
# The servers have already been created so this will pull values from the defaults/general_instance_vars file to apply floating IP
    os_floating_ip:
      cloud:             "{{ cloud_name }}"
      state:             "{{ float_ip_state }}"
      reuse:             "{{ float_ip_reuse_value }}"
      server:            "{{ server_name }}"
      network:           "{{ float_ip_net }}"
      wait:              "{{ float_ip_wait }}"
      timeout:           "{{ float_ip_timeout }}"

  - name: Cthulhu sleeps during asynchronous processes until it is time to devour "{{ server_name }}"
    async_status:
      jid: "{{ cthulhu.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 30
    loop: "{{ cthulhu.results }}"



...
