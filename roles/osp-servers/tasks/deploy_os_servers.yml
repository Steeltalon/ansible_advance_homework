---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
# loop on the values in osp_servers to populate all of the os_server information
  tasks:
    - name: "build instance for {{ item.key }}"
      block:
        - name: OS Server Build
          os_server:
            state: "{{ item.value.state }}"
            name: "{{ item.value.name }}"
            cloud: "{{ item.value.cloud }}"
            region_name: "{{ item.value.region_name }}"
            interface: internal
            network: int_subnet
            image: "{{ item.value.image }}"
            flavor: "{{ item.value.flavor }}"
            meta: "{ group: { item.value.meta.group }, deployment_name: { item.value.meta.deployment_name } }"
            security_groups: "{{ item.value.security_group }}"
            userdata: |
            #!/bin/bash
            curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
            cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
            curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
            cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
          register: instanceip

        - name: Add floating IP to Servers
          os_floating_ip:
            cloud: "{{ item.value.cloud }}"
            state: present
            reuse: yes
            server: "{{ item.value.name }}"
            network: ext_network
            wait: true
            timeout: 180
          register: instancefloatingip
        - name: Show "{{ instanceip }}" public IP
          debug: var=instancefloatingip.floating_ip.floating_ip_address

        - name: Wait for "{{ instance_name }}" to be available
          wait_for:
            host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
            port: 22
            search_regex: OpenSSH
            timeout: 600
            delegate_to: "{{ inventory_hostname }}"

      with_dict: "{{ osp_servers }}"
      loop_control:
        label: "{{ item.key }}"
    - debug:
        msg: successfully deployed server instances
